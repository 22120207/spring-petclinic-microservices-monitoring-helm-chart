apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.hostname.grafanaServer.name }}
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ .Values.hostname.grafanaServer.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.hostname.grafanaServer.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.hostname.grafanaServer.name }}
    spec:
      containers:
        - name: {{ .Values.hostname.grafanaServer.name }}
          image: "{{ .Values.images.grafanaServer.repository }}:{{ .Values.images.grafanaServer.tag }}"
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.hostname.grafanaServer.name }}-secret
                  key: admin-password
          volumeMounts:
            - name: {{ .Values.hostname.grafanaServer.name }}-storage
              mountPath: /var/lib/grafanana
      volumes:
        - name: {{ .Values.hostname.grafanaServer.name }}-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.hostname.grafanaServer.name }}
  namespace: {{ .Values.namespace }}
spec:
  type: NodePort
  selector:
    app: {{ .Values.hostname.grafanaServer.name }}
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.hostname.grafanaServer.name }}-secret
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  admin-password: YWRtaW4=
